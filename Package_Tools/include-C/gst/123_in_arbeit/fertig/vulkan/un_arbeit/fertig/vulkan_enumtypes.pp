
unit vulkan_enumtypes;
interface

{
  Automatically converted by H2Pas 0.99.16 from vulkan_enumtypes.h
  The following command line parameters were used:
    -p
    -T
    -d
    -c
    -e
    vulkan_enumtypes.h
}


{$IFDEF FPC}
{$PACKRECORDS C}
{$ENDIF}


{ This file is generated by glib-mkenums, do not modify it. This code is licensed under the same license as the containing project. Note that it links to GLib, so must comply with the LGPL linking clauses.  }
(** unsupported pragma#pragma once*)
{$include <gst/gst.h>}
{$include <gst/vulkan/vulkan_fwd.h>}
{ enumerations from "gstvkbarrier.h"  }

function gst_vulkan_barrier_type_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function GST_TYPE_VULKAN_BARRIER_TYPE : longint; { return type might be wrong }

function gst_vulkan_barrier_flags_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function GST_TYPE_VULKAN_BARRIER_FLAGS : longint; { return type might be wrong }

{ enumerations from "gstvkdisplay.h"  }
function gst_vulkan_display_type_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function GST_TYPE_VULKAN_DISPLAY_TYPE : longint; { return type might be wrong }

{ enumerations from "gstvkerror.h"  }
function gst_vulkan_error_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function GST_TYPE_VULKAN_ERROR : longint; { return type might be wrong }

{ enumerations from "gstvkformat.h"  }
function gst_vulkan_format_scaling_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function GST_TYPE_VULKAN_FORMAT_SCALING : longint; { return type might be wrong }

function gst_vulkan_format_flags_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function GST_TYPE_VULKAN_FORMAT_FLAGS : longint; { return type might be wrong }

{ enumerations from "gstvkhandle.h"  }
function gst_vulkan_handle_type_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function GST_TYPE_VULKAN_HANDLE_TYPE : longint; { return type might be wrong }

{ enumerations from "gstvkvideoutils.h"  }
function gst_vulkan_video_operation_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function GST_TYPE_VULKAN_VIDEO_OPERATION : longint; { return type might be wrong }

{ enumerations from "gstvkwindow.h"  }
function gst_vulkan_window_error_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function GST_TYPE_VULKAN_WINDOW_ERROR : longint; { return type might be wrong }

{ Generated data ends here  }

implementation

{ was #define dname def_expr }
function GST_TYPE_VULKAN_BARRIER_TYPE : longint; { return type might be wrong }
  begin
    GST_TYPE_VULKAN_BARRIER_TYPE:=gst_vulkan_barrier_type_get_type;
  end;

{ was #define dname def_expr }
function GST_TYPE_VULKAN_BARRIER_FLAGS : longint; { return type might be wrong }
  begin
    GST_TYPE_VULKAN_BARRIER_FLAGS:=gst_vulkan_barrier_flags_get_type;
  end;

{ was #define dname def_expr }
function GST_TYPE_VULKAN_DISPLAY_TYPE : longint; { return type might be wrong }
  begin
    GST_TYPE_VULKAN_DISPLAY_TYPE:=gst_vulkan_display_type_get_type;
  end;

{ was #define dname def_expr }
function GST_TYPE_VULKAN_ERROR : longint; { return type might be wrong }
  begin
    GST_TYPE_VULKAN_ERROR:=gst_vulkan_error_get_type;
  end;

{ was #define dname def_expr }
function GST_TYPE_VULKAN_FORMAT_SCALING : longint; { return type might be wrong }
  begin
    GST_TYPE_VULKAN_FORMAT_SCALING:=gst_vulkan_format_scaling_get_type;
  end;

{ was #define dname def_expr }
function GST_TYPE_VULKAN_FORMAT_FLAGS : longint; { return type might be wrong }
  begin
    GST_TYPE_VULKAN_FORMAT_FLAGS:=gst_vulkan_format_flags_get_type;
  end;

{ was #define dname def_expr }
function GST_TYPE_VULKAN_HANDLE_TYPE : longint; { return type might be wrong }
  begin
    GST_TYPE_VULKAN_HANDLE_TYPE:=gst_vulkan_handle_type_get_type;
  end;

{ was #define dname def_expr }
function GST_TYPE_VULKAN_VIDEO_OPERATION : longint; { return type might be wrong }
  begin
    GST_TYPE_VULKAN_VIDEO_OPERATION:=gst_vulkan_video_operation_get_type;
  end;

{ was #define dname def_expr }
function GST_TYPE_VULKAN_WINDOW_ERROR : longint; { return type might be wrong }
  begin
    GST_TYPE_VULKAN_WINDOW_ERROR:=gst_vulkan_window_error_get_type;
  end;


end.
