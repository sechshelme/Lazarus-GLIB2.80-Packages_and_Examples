
unit transcoder_enumtypes;
interface

{
  Automatically converted by H2Pas 0.99.16 from transcoder_enumtypes.h
  The following command line parameters were used:
    -p
    -T
    -d
    -c
    -e
    transcoder_enumtypes.h
}


{$IFDEF FPC}
{$PACKRECORDS C}
{$ENDIF}


{ This file is generated by glib-mkenums, do not modify it. This code is licensed under the same license as the containing project. Note that it links to GLib, so must comply with the LGPL linking clauses.  }
(** unsupported pragma#pragma once*)
{$include <glib-object.h>}
{$include <gst/transcoder/transcoder-prelude.h>}
{ enumerations from "gsttranscoder.h"  }

function gst_transcoder_error_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function GST_TYPE_TRANSCODER_ERROR : longint; { return type might be wrong }

function gst_transcoder_state_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function GST_TYPE_TRANSCODER_STATE : longint; { return type might be wrong }

function gst_transcoder_message_get_type:TGType;cdecl;external;
{ was #define dname def_expr }
function GST_TYPE_TRANSCODER_MESSAGE : longint; { return type might be wrong }

{ Generated data ends here  }

implementation

{ was #define dname def_expr }
function GST_TYPE_TRANSCODER_ERROR : longint; { return type might be wrong }
  begin
    GST_TYPE_TRANSCODER_ERROR:=gst_transcoder_error_get_type;
  end;

{ was #define dname def_expr }
function GST_TYPE_TRANSCODER_STATE : longint; { return type might be wrong }
  begin
    GST_TYPE_TRANSCODER_STATE:=gst_transcoder_state_get_type;
  end;

{ was #define dname def_expr }
function GST_TYPE_TRANSCODER_MESSAGE : longint; { return type might be wrong }
  begin
    GST_TYPE_TRANSCODER_MESSAGE:=gst_transcoder_message_get_type;
  end;


end.
